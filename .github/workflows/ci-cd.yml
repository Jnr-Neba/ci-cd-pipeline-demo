name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: todo
          POSTGRES_PASSWORD: todopass
          POSTGRES_DB: todoapp
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U todo -d todoapp"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: npm install

      # 4️⃣ Build Docker image for the app
      - name: Build Docker image
        run: docker build -t todo-api .

      # 5️⃣ Start Docker Compose (app + db)
      - name: Start services with Docker Compose
        run: docker compose up -d

      # 6️⃣ Wait for services to be ready
      - name: Wait for services
        run: sleep 15

      # 7️⃣ Run API tests
      - name: Run API tests
        run: |
          curl -X POST http://localhost:8080/tasks -H "Content-Type: application/json" -d '{"task":"CI/CD Test Task"}'
          curl http://localhost:8080/tasks
          curl http://localhost:8080/healthz

      # 8️⃣ Tear down containers
      - name: Stop Docker Compose
        run: docker compose down

